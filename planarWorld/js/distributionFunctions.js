var distribution = {

  get: function (type, maximum, compression, pos) {
    var calcpos = Math.round(((pos - maximum) * 100 * compression) + 100)
    // console.log(calcpos);
    return this[type][calcpos]
  },
  find: function (obj, tem, hum) {

    var refHum = referenceBook[obj].hum;
    var refTem = referenceBook[obj].tem;

    var occurence = distribution.get(refTem[0], refTem[1], refTem[2], tem) * distribution.get(refHum[0], refHum[1], refHum[2], hum);

    if (isNaN(occurence)) {
      return 0;
    }
    return occurence;
  },

  _05: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.000001,0.000002,0.000007,0.000018,0.000049,0.000131,0.000354,0.000955,0.002575,0.006921,0.018469,0.048349,0.120627,0.270270,0.500000,0.729730,0.879373,0.951651,0.981531,0.993079,0.997425,0.999045,0.999646,0.999869,0.999951,0.999982,0.999993,0.999998,0.999999,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.999999,0.999998,0.999993,0.999982,0.999951,0.999869,0.999646,0.999045,0.997425,0.993079,0.981531,0.951651,0.879373,0.729730,0.500000,0.270270,0.120627,0.048349,0.018469,0.006921,0.002575,0.000955,0.000354,0.000131,0.000049,0.000018,0.000007,0.000002,0.000001,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  _02: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.000001,0.000001,0.000001,0.000002,0.000003,0.000004,0.000007,0.000010,0.000015,0.000022,0.000033,0.000049,0.000072,0.000107,0.000160,0.000238,0.000354,0.000527,0.000783,0.001165,0.001732,0.002575,0.003826,0.005681,0.008429,0.012489,0.018469,0.027233,0.039986,0.058354,0.084416,0.120627,0.169496,0.232919,0.311182,0.401961,0.500000,0.598039,0.688818,0.767081,0.830504,0.879373,0.915584,0.941646,0.960014,0.972767,0.981531,0.987511,0.991571,0.994319,0.996174,0.997425,0.998268,0.998835,0.999217,0.999473,0.999646,0.999762,0.999840,0.999893,0.999928,0.999951,0.999967,0.999978,0.999985,0.999990,0.999993,0.999996,0.999997,0.999998,0.999999,0.999999,0.999999,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.999999,0.999999,0.999999,0.999998,0.999997,0.999996,0.999993,0.999990,0.999985,0.999978,0.999967,0.999951,0.999928,0.999893,0.999840,0.999762,0.999646,0.999473,0.999217,0.998835,0.998268,0.997425,0.996174,0.994319,0.991571,0.987511,0.981531,0.972767,0.960014,0.941646,0.915584,0.879373,0.830504,0.767081,0.688818,0.598039,0.500000,0.401961,0.311182,0.232919,0.169496,0.120627,0.084416,0.058354,0.039986,0.027233,0.018469,0.012489,0.008429,0.005681,0.003826,0.002575,0.001732,0.001165,0.000783,0.000527,0.000354,0.000238,0.000160,0.000107,0.000072,0.000049,0.000033,0.000022,0.000015,0.000010,0.000007,0.000004,0.000003,0.000002,0.000001,0.000001,0.000001,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
  _01: [0.000049,0.000059,0.000072,0.000088,0.000107,0.000131,0.000160,0.000195,0.000238,0.000290,0.000354,0.000432,0.000527,0.000642,0.000783,0.000955,0.001165,0.001420,0.001732,0.002112,0.002575,0.003139,0.003826,0.004662,0.005681,0.006921,0.008429,0.010262,0.012489,0.015192,0.018469,0.022437,0.027233,0.033020,0.039986,0.048349,0.058354,0.070276,0.084416,0.101092,0.120627,0.143336,0.169496,0.199320,0.232919,0.270270,0.311182,0.355271,0.401961,0.450500,0.500000,0.549500,0.598039,0.644729,0.688818,0.729730,0.767081,0.800680,0.830504,0.856664,0.879373,0.898908,0.915584,0.929724,0.941646,0.951651,0.960014,0.966980,0.972767,0.977563,0.981531,0.984808,0.987511,0.989738,0.991571,0.993079,0.994319,0.995338,0.996174,0.996861,0.997425,0.997888,0.998268,0.998580,0.998835,0.999045,0.999217,0.999358,0.999473,0.999568,0.999646,0.999710,0.999762,0.999805,0.999840,0.999869,0.999893,0.999912,0.999928,0.999941,0.999951,0.999941,0.999928,0.999912,0.999893,0.999869,0.999840,0.999805,0.999762,0.999710,0.999646,0.999568,0.999473,0.999358,0.999217,0.999045,0.998835,0.998580,0.998268,0.997888,0.997425,0.996861,0.996174,0.995338,0.994319,0.993079,0.991571,0.989738,0.987511,0.984808,0.981531,0.977563,0.972767,0.966980,0.960014,0.951651,0.941646,0.929724,0.915584,0.898908,0.879373,0.856664,0.830504,0.800680,0.767081,0.729730,0.688818,0.644729,0.598039,0.549500,0.500000,0.450500,0.401961,0.355271,0.311182,0.270270,0.232919,0.199320,0.169496,0.143336,0.120627,0.101092,0.084416,0.070276,0.058354,0.048349,0.039986,0.033020,0.027233,0.022437,0.018469,0.015192,0.012489,0.010262,0.008429,0.006921,0.005681,0.004662,0.003826,0.003139,0.002575,0.002112,0.001732,0.001420,0.001165,0.000955,0.000783,0.000642,0.000527,0.000432,0.000354,0.000290,0.000238,0.000195,0.000160,0.000131,0.000107,0.000088,0.000072,0.000059,0.000049],
  _008: [0.000354,0.000415,0.000486,0.000570,0.000668,0.000783,0.000918,0.001076,0.001261,0.001478,0.001732,0.002030,0.002378,0.002787,0.003265,0.003826,0.004482,0.005249,0.006148,0.007199,0.008429,0.009867,0.011546,0.013508,0.015798,0.018469,0.021582,0.025205,0.029419,0.034313,0.039986,0.046553,0.054138,0.062876,0.072917,0.084416,0.097538,0.112449,0.129313,0.148284,0.169496,0.193055,0.219024,0.247416,0.278177,0.311182,0.346223,0.383017,0.421202,0.460353,0.500000,0.539647,0.578798,0.616983,0.653777,0.688818,0.721823,0.752584,0.780976,0.806945,0.830504,0.851716,0.870687,0.887551,0.902462,0.915584,0.927083,0.937124,0.945862,0.953447,0.960014,0.965687,0.970581,0.974795,0.978418,0.981531,0.984202,0.986492,0.988454,0.990133,0.991571,0.992801,0.993852,0.994751,0.995518,0.996174,0.996735,0.997213,0.997622,0.997970,0.998268,0.998522,0.998739,0.998924,0.999082,0.999217,0.999332,0.999430,0.999514,0.999585,0.999646,0.999585,0.999514,0.999430,0.999332,0.999217,0.999082,0.998924,0.998739,0.998522,0.998268,0.997970,0.997622,0.997213,0.996735,0.996174,0.995518,0.994751,0.993852,0.992801,0.991571,0.990133,0.988454,0.986492,0.984202,0.981531,0.978418,0.974795,0.970581,0.965687,0.960014,0.953447,0.945862,0.937124,0.927083,0.915584,0.902462,0.887551,0.870687,0.851716,0.830504,0.806945,0.780976,0.752584,0.721823,0.688818,0.653777,0.616983,0.578798,0.539647,0.500000,0.460353,0.421202,0.383017,0.346223,0.311182,0.278177,0.247416,0.219024,0.193055,0.169496,0.148284,0.129313,0.112449,0.097538,0.084416,0.072917,0.062876,0.054138,0.046553,0.039986,0.034313,0.029419,0.025205,0.021582,0.018469,0.015798,0.013508,0.011546,0.009867,0.008429,0.007199,0.006148,0.005249,0.004482,0.003826,0.003265,0.002787,0.002378,0.002030,0.001732,0.001478,0.001261,0.001076,0.000918,0.000783,0.000668,0.000570,0.000486,0.000415,0.000354],
  _006: [0.002575,0.002899,0.003265,0.003677,0.004141,0.004662,0.005249,0.005910,0.006653,0.007489,0.008429,0.009486,0.010674,0.012009,0.013508,0.015192,0.017083,0.019203,0.021582,0.024247,0.027233,0.030575,0.034313,0.038489,0.043151,0.048349,0.054138,0.060576,0.067724,0.075649,0.084416,0.094096,0.104760,0.116476,0.129313,0.143336,0.158603,0.175162,0.193055,0.212304,0.232919,0.254888,0.278177,0.302730,0.328464,0.355271,0.383017,0.411548,0.440686,0.470238,0.500000,0.529762,0.559314,0.588452,0.616983,0.644729,0.671536,0.697270,0.721823,0.745112,0.767081,0.787696,0.806945,0.824838,0.841397,0.856664,0.870687,0.883524,0.895240,0.905904,0.915584,0.924351,0.932276,0.939424,0.945862,0.951651,0.956849,0.961511,0.965687,0.969425,0.972767,0.975753,0.978418,0.980797,0.982917,0.984808,0.986492,0.987991,0.989326,0.990514,0.991571,0.992511,0.993347,0.994090,0.994751,0.995338,0.995859,0.996323,0.996735,0.997101,0.997425,0.997101,0.996735,0.996323,0.995859,0.995338,0.994751,0.994090,0.993347,0.992511,0.991571,0.990514,0.989326,0.987991,0.986492,0.984808,0.982917,0.980797,0.978418,0.975753,0.972767,0.969425,0.965687,0.961511,0.956849,0.951651,0.945862,0.939424,0.932276,0.924351,0.915584,0.905904,0.895240,0.883524,0.870687,0.856664,0.841397,0.824838,0.806945,0.787696,0.767081,0.745112,0.721823,0.697270,0.671536,0.644729,0.616983,0.588452,0.559314,0.529762,0.500000,0.470238,0.440686,0.411548,0.383017,0.355271,0.328464,0.302730,0.278177,0.254888,0.232919,0.212304,0.193055,0.175162,0.158603,0.143336,0.129313,0.116476,0.104760,0.094096,0.084416,0.075649,0.067724,0.060576,0.054138,0.048349,0.043151,0.038489,0.034313,0.030575,0.027233,0.024247,0.021582,0.019203,0.017083,0.015192,0.013508,0.012009,0.010674,0.009486,0.008429,0.007489,0.006653,0.005910,0.005249,0.004662,0.004141,0.003677,0.003265,0.002899,0.002575],
  _004: [0.018469,0.019966,0.021582,0.023325,0.025205,0.027233,0.029419,0.031775,0.034313,0.037045,0.039986,0.043151,0.046553,0.050210,0.054138,0.058354,0.062876,0.067724,0.072917,0.078474,0.084416,0.090764,0.097538,0.104760,0.112449,0.120627,0.129313,0.138526,0.148284,0.158603,0.169496,0.180977,0.193055,0.205736,0.219024,0.232919,0.247416,0.262506,0.278177,0.294410,0.311182,0.328464,0.346223,0.364422,0.383017,0.401961,0.421202,0.440686,0.460353,0.480145,0.500000,0.519855,0.539647,0.559314,0.578798,0.598039,0.616983,0.635578,0.653777,0.671536,0.688818,0.705590,0.721823,0.737494,0.752584,0.767081,0.780976,0.794264,0.806945,0.819023,0.830504,0.841397,0.851716,0.861474,0.870687,0.879373,0.887551,0.895240,0.902462,0.909236,0.915584,0.921526,0.927083,0.932276,0.937124,0.941646,0.945862,0.949790,0.953447,0.956849,0.960014,0.962955,0.965687,0.968225,0.970581,0.972767,0.974795,0.976675,0.978418,0.980034,0.981531,0.980034,0.978418,0.976675,0.974795,0.972767,0.970581,0.968225,0.965687,0.962955,0.960014,0.956849,0.953447,0.949790,0.945862,0.941646,0.937124,0.932276,0.927083,0.921526,0.915584,0.909236,0.902462,0.895240,0.887551,0.879373,0.870687,0.861474,0.851716,0.841397,0.830504,0.819023,0.806945,0.794264,0.780976,0.767081,0.752584,0.737494,0.721823,0.705590,0.688818,0.671536,0.653777,0.635578,0.616983,0.598039,0.578798,0.559314,0.539647,0.519855,0.500000,0.480145,0.460353,0.440686,0.421202,0.401961,0.383017,0.364422,0.346223,0.328464,0.311182,0.294410,0.278177,0.262506,0.247416,0.232919,0.219024,0.205736,0.193055,0.180977,0.169496,0.158603,0.148284,0.138526,0.129313,0.120627,0.112449,0.104760,0.097538,0.090764,0.084416,0.078474,0.072917,0.067724,0.062876,0.058354,0.054138,0.050210,0.046553,0.043151,0.039986,0.037045,0.034313,0.031775,0.029419,0.027233,0.025205,0.023325,0.021582,0.019966,0.018469]
}

var bumpDist = {
  get: function (x, c, r, w, z) {
    var g = Math.exp(w*(1-1/(1-((x-c)/r)**2)))*z;
    if(g > z) return 0;
    // if(g > 1) return 1;
    return g;
  },
  find: function (obj, tem, hum) {
    if (typeof obj != "string") {
      var refHum = obj.hum;
      var refTem = obj.tem;
      
    } else {
      var refHum = referenceBook[obj].hum;
      var refTem = referenceBook[obj].tem;
    }

    var occurence = bumpDist.get(tem, refTem[0], refTem[1], refTem[2], refTem[3]) * bumpDist.get(hum, refHum[0], refHum[1], refHum[2], refHum[3]);
  
    if (occurence > 1) return 1;

    return occurence;
  }
}


function bumpDistFun(x, c, r, w, z) {
  var g = Math.exp(w*(1-1/(1-((x-c)/r)**2)))*z;
  if(g > z) return 0;
  // if(g > 1) return 1;
  return g;
}

function bumpDist2D(x1, x2, c1, c2, r1, r2, w, z, s) {
  if(Math.abs(x1-c1) > r1  || Math.abs(x2-c2) > r2) return 0;


  var g = z*Math.exp(w*((1-1/(1-((x1-c1)/r1)**2))+(1-1/(1-((x2-c2)/r2)**2))-(1-1/(1-(s*(((x1-c1)/r1)*((x2-c2)/r2)))))));
  return g;
}
